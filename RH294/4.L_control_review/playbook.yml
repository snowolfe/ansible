---
- name: Playbook Control Lab
  hosts: webservers
  become: true
  gather_facts: true
  vars_files:
    - vars/vars.yml

  tasks:
    #Fail Fast Message
    - name: skip if host has minimum RAM requirement
      ansible.builtin.fail:
        msg: >
          Required minimum RAM - {{ min_ram_mb }} MiB.
          {{ inventory.hostname }} RAM - {{ ansible_facts.memtotal_mb }} MiB
      when: ansible_facts.memtotal_mb < min_ram_mb

    - name: skip if host is running Red Hat Enterprise Linux
      ansible.builtin.fail:
        msg: "{{ inventory.hostname }} has operating system - {{ ansible_facts.distribution }}"
      when: ansible_facts.distribution != "RedHat"

    #Install all Packages
    - name: required packages are present
      ansible.builtin.dnf:
        name: "{{ packages }}"
        state: latest

    #Enable and start services
    - name: required services are started and enabled
      ansible.builtin.service:
        name: "{{ item }}"
        state: started
        enabled: true
      loop: "{{ services }}"

    #Block of config tasks
    - block:
        - name: ssl certs directory exists
          ansible.builtin.file:
            path: "{{ ssl_cert_dir }}"
            state: directory

        - name: web config files installed
          ansible.builtin.copy:
            src: files/{{ item.src }}
            dest: "{{ item.dest }}"
          loop: "{{ web_config_files }}"
          notify: restart web service

      rescue:
        - name: report reason for failure
          ansible.builtin.debug:
            msg: >
              One or more of the configuration changes failed,
              but the web service is still active.

    #Configure the firewall
    - name: firewall allows http/s protocol
      ansible.posix.firewalld:
        service: "{{ item }}"
        immediate: true
        permanent: true
        state: enabled
      loop:
        - http
        - https

  #Add handlers
  handlers:
    - name: restart web service
      ansible.builtin.service:
        name: "{{ web_service }}"
        state: restarted
